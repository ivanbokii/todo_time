- reserved words like _at_, _oclock_
- word numbers - one, two etc.
- modifiers - am, pm

samples: 
  - 7:00 - {number colon number} - standard time
  - 7 am, 7am - {number modifier}
  - 8 - {number} - by default uses current part of day
  - at seven oclock {reserved number reserved}  !! not yet implemented
  - seven {number}

duration:
- 30 - {number} - 30 minutes
- 3 minutes/min/m/hours/hour/h - {number time_unit} - 3 units of specified time
- hour - {time_unit} - 1 hour
- one hour, five minutes - {number time_unit} - number of time units

fuzzy analyser:
- number time number, like 8:00
- number time number modifier, like 8:00 am/pm
- number modifier, like 8 am/pm

update fuzzy analyser to parse time and duration
  - parse duration first, then remove tokens from input stream and pass to time
    analyser

duration analyse:
  - analyse all time patterns from the input
  - add tokens "time_pattern"
  - analyse from time pattern to time pattern sequences

  the problem:
  - analyse all time patterns
  from 8:00 am to 8:00 pm
  possible solution: analyse all and then check for overlaps